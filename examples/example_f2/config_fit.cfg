#-------------------------- PeldorFit Configuration File ----------------------------

# Operation mode: 0 - simulation, 1 - fitting, 2 - validation
#------------------------------------------------------------------------------------
mode = 1;


# Experimental
#------------------------------------------------------------------------------------
experiments = (
	{
		name = "offset 1";
		filename = "offset1.dat"; 
		technique = "4pELDOR-rect";
		magnetic_field = 0.34415;
		detection_frequency = 9.820069;
		detection_pulse_lengths = [16, 32];
		pump_frequency = 9.660195;
		pump_pulse_lengths = [18];
	},
	{
		name = "offset 2";
		filename = "offset2.dat"; 
		technique = "4pELDOR-rect";
		magnetic_field = 0.3419;
		detection_frequency = 9.820435;
		detection_pulse_lengths = [16, 32];
		pump_frequency = 9.600171;
		pump_pulse_lengths = [20];
	},
	{
		name = "offset 3";
		filename = "offset3.dat"; 
		technique = "4pELDOR-rect";
		magnetic_field = 0.33085;
		detection_frequency = 9.730215;
		detection_pulse_lengths = [16, 32];
		pump_frequency = 9.290105;
		pump_pulse_lengths = [50];
	},
	{
		name = "offset 4";
		filename = "offset4.dat"; 
		technique = "4pELDOR-rect";
		magnetic_field = 0.3267;
		detection_frequency = 9.730316;
		detection_pulse_lengths = [8, 16];
		pump_frequency = 9.170579;
		pump_pulse_lengths = [60];
	}
);


# Spin system
#------------------------------------------------------------------------------------
spins = (
	{
		g = [2.047, 2.047, 2.2703];
		gStrain = [0.022, 0.022, 0.033];
		n = (1);
		I = (1.5);
		Abund = (1.0);
		A = ([47.0, 47.0, 161.0]);
		AStrain = ([]);
		lwpp = 53.5;
		T1 = 0;
		g_anisotropy_in_dipolar_coupling = 0;
	},
	{
		g = [2.0092, 2.0061, 2.0022];
		gStrain = [];
		n = (1);
		I = (1.0);
		Abund = (1.0);
		A = ([17.3, 17.3, 101.0]);
		AStrain = ([]);
		lwpp = 17.4;
		T1 = 0;
		g_anisotropy_in_dipolar_coupling = 0;
	}
);


# Simulation
#------------------------------------------------------------------------------------
simulation_parameters:
{
	r_mean      = ([]);
	r_width     = ([]);
    xi_mean     = ([]);
    xi_width    = ([]);
	phi_mean    = ([]);
	phi_width   = ([]);
	alpha_mean  = ([]);
    alpha_width = ([]);
	beta_mean   = ([]);
	beta_width  = ([]);
	gamma_mean  = ([]);
    gamma_width = ([]);
	rel_prob    = ([]);
	j_mean      = ([]);
	j_width     = ([]);
};


# Fitting
#------------------------------------------------------------------------------------
fitting_parameters:
{
    r_mean		: {optimize = ([1,1]); range = ([2.00, 2.50], [2.50, 3.00]); value = ()        };
	r_width		: {optimize = ([1,1]); range = ([0.00, 0.20], [0.00, 0.30]); value = ()        };
    xi_mean		: {optimize = ([1,1]); range = ([ 0.0, 90.0], [ 0.0, 90.0]); value = ()        };
    xi_width	: {optimize = ([1,1]); range = ([ 0.0, 90.0], [ 0.0, 90.0]); value = ()        };
	phi_mean	: {optimize = ([0,0]); range = ();                           value = (0.0, 0.0)};
	phi_width	: {optimize = ([0,0]); range = ();                           value = (0.0, 0.0)};
	alpha_mean	: {optimize = ([1,1]); range = ([ 0.0, 90.0], [ 0.0, 90.0]); value = ()        };
    alpha_width	: {optimize = ([1,1]); range = ([ 0.0, 90.0], [ 0.0, 90.0]); value = ()        };
	beta_mean	: {optimize = ([1,1]); range = ([ 0.0, 90.0], [ 0.0, 90.0]); value = ()        };
	beta_width	: {optimize = ([1,1]); range = ([ 0.0, 90.0], [ 0.0, 90.0]); value = ()        };
	gamma_mean	: {optimize = ([1,1]); range = ([ 0.0, 90.0], [ 0.0, 90.0]); value = ()        };
    gamma_width	: {optimize = ([1,1]); range = ([ 0.0, 90.0], [ 0.0, 90.0]); value = ()        };
	rel_prob	: {optimize = ([1]);   range = ([ 0.0,  1.0]);               value = ()        };
	j_mean		: {optimize = ([0]);   range = ();                           value = (0.0)     };
	j_width		: {optimize = ([0]);   range = ();                           value = (0.0)     };
};

fitting_settings:
{
    optimization_method = "ga_local";
	parameters : {number_of_runs = 1,
				  number_of_generations = 5000, 
	              generation_size = 224, 
	              crossover_probability = 0.5, 
				  mutation_probability = 0.01,
				  crossover_probability_increment = 0,
				  mutation_probability_increment = 0.01,
	              parent_selection = "tournament",
				  nelder_mead_maxiter = 1000};
	display_graphics = 0;
	goodness_of_fit = "chi2";
};


# Error analysis
#------------------------------------------------------------------------------------
error_analysis_parameters:
{
	parameters = (["r_mean", "r_width"], ["r_mean", "r_width"], ["xi_mean", "xi_width"], ["xi_mean", "xi_width"], ["alpha_mean", "alpha_width"], ["alpha_mean", "alpha_width"], ["beta_mean", "beta_width"], ["beta_mean", "beta_width"], ["gamma_mean", "gamma_width"], ["gamma_mean", "gamma_width"], ["rel_prob"]);
	spin_pairs = ([1,1], [1,1], [1,1], [1,1], [1,1], [1,1], [1,1], [1,1], [1,1], [1,1], [1]);
	components = ([1,1], [2,2], [1,1], [2,2], [1,1], [2,2], [1,1], [2,2], [1,1], [2,2], [1]);
};

error_analysis_settings:
{
    sample_size = 10000;
	confidence_interval = 3;
    filepath_optimized_parameters = "";
};


# Calculation
#------------------------------------------------------------------------------------
calculation_settings:
{
	integration_method = "monte_carlo"
	mc_sample_size = 1000000;
	distributions : {r = "normal", xi = "vonmises", phi = "vonmises", alpha = "vonmises", beta = "vonmises", gamma = "vonmises", j = "normal"};
	excitation_threshold = 0.001;
	euler_angles_convention = "ZXZ";
	background_model = "exp";
	background_parameters = {
		decay_constant : {optimize = 1; range = [0, 1]; value = 0.05};
		scale_factor   : {optimize = 1; range = [0, 1]; value = 1   };
	};
};


# Output
#------------------------------------------------------------------------------------  
output:
{
    directory = "";
    save_data = 1;
    save_figures = 1;
};
### eof