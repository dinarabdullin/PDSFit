#--------------------------- PDSFit Configuration File ------------------------------

# Operation mode: 0 - simulation, 1 - fitting, 2 - validation
#------------------------------------------------------------------------------------
mode = 1;


# Experimental
#------------------------------------------------------------------------------------
experiments = (
	{
		name = "offset 1";
		filename = "offset1.dat"; 
		technique = "4pELDOR-rect";
		magnetic_field = 0.34415;
		detection_frequency = 9.820069;
		detection_pulse_lengths = [16, 32];
		pump_frequency = 9.660195;
		pump_pulse_lengths = [18];
	},
	{
		name = "offset 2";
		filename = "offset2.dat"; 
		technique = "4pELDOR-rect";
		magnetic_field = 0.3419;
		detection_frequency = 9.820435;
		detection_pulse_lengths = [16, 32];
		pump_frequency = 9.600171;
		pump_pulse_lengths = [20];
	},
	{
		name = "offset 3";
		filename = "offset3.dat"; 
		technique = "4pELDOR-rect";
		magnetic_field = 0.33085;
		detection_frequency = 9.730215;
		detection_pulse_lengths = [16, 32];
		pump_frequency = 9.290105;
		pump_pulse_lengths = [50];
	},
	{
		name = "offset 4";
		filename = "offset4.dat"; 
		technique = "4pELDOR-rect";
		magnetic_field = 0.3267;
		detection_frequency = 9.730316;
		detection_pulse_lengths = [8, 16];
		pump_frequency = 9.170579;
		pump_pulse_lengths = [60];
	}
);


# Spin system
#------------------------------------------------------------------------------------
spins = (
	{
		g = [2.047, 2.047, 2.2703];
		gStrain = [0.022, 0.022, 0.033];
		n = (1);
		I = (1.5);
		Abund = (1.0);
		A = ([47.0, 47.0, 161.0]);
		AStrain = ([]);
		lwpp = 53.5;
		T1 = 0;
		g_anisotropy_in_dipolar_coupling = 1;
	},
	{
		g = [2.0092, 2.0061, 2.0022];
		gStrain = [];
		n = (1);
		I = (1.0);
		Abund = (1.0);
		A = ([17.3, 17.3, 101.0]);
		AStrain = ([]);
		lwpp = 17.4;
		T1 = 0;
		g_anisotropy_in_dipolar_coupling = 0;
	}
);


# Background
#-----------------------------------------------------------------------------------
background:
{
	model = "exp";
	parameters = {
		decay_constant : {optimize = 1; range = [0,   1  ]; value = 0.05};
		scale_factor   : {optimize = 1; range = [0.8, 1.0]; value = 1   };
	};
};


# Fitting
#------------------------------------------------------------------------------------
fitting_parameters:
{
    r_mean		: {optimize = (1,1); range = ([20.0,  25.0], [25.0,  30.0]); value = ()        };
	r_width		: {optimize = (1,1); range = ([ 0.0,   4.0], [0.00,  12.0]); value = ()        };
    xi_mean		: {optimize = (1,1); range = ([ 0.0,  90.0], [ 0.0,  90.0]); value = ()        };
    xi_width	: {optimize = (1,1); range = ([ 0.0, 180.0], [ 0.0, 180.0]); value = ()        };
	phi_mean	: {optimize = (0,0); range = ();                             value = (0.0, 0.0)};
	phi_width	: {optimize = (0,0); range = ();                             value = (0.0, 0.0)};
	alpha_mean	: {optimize = (1,1); range = ([ 0.0,  90.0], [ 0.0,  90.0]); value = ()        };
    alpha_width	: {optimize = (1,1); range = ([ 0.0, 180.0], [ 0.0, 180.0]); value = ()        };
	beta_mean	: {optimize = (1,1); range = ([ 0.0,  90.0], [ 0.0,  90.0]); value = ()        };
	beta_width	: {optimize = (1,1); range = ([ 0.0, 180.0], [ 0.0, 180.0]); value = ()        };
	gamma_mean	: {optimize = (0,0); range = ();                             value = (0.0, 0.0)};
    gamma_width	: {optimize = (0,0); range = ();                             value = (0.0, 0.0)};
	rel_prob	: {optimize = (1);   range = ([ 0.0,  1.0]);                 value = ()        };
	j_mean		: {optimize = (0,0); range = ();                             value = (0.0, 0.0)};
	j_width		: {optimize = (0,0); range = ();                             value = (0.0, 0.0)};
};

fitting_settings:
{
    goodness_of_fit = "chi2";
	optimization_method = "ga";
	parameters : {
		number_of_runs = 10,
		generation_size = 192, 
		parent_selection = "tournament",
		crossover_probability = 0.3, 
		mutation_probability = 0.05,
		single_point_crossover_to_uniform_crossover_ratio = 1,
		creep_mutation_to_uniform_mutation_ratio = 1,
		exchange_probability = 0.5,
		creep_size = 0.1,
		maximum_number_of_generations = 1000, 
		maximum_number_of_generations_with_constant_score = 500,
		accepted_score_variation = 0.05,
		maximal_number_of_nma_iterations = 500
		};
};


# Error analysis
#------------------------------------------------------------------------------------
error_analysis_parameters = (
	{
		names = ("r_mean", "r_width", "rel_prob");
		components = (1, 1, 1);
		ranges = ();
    }, 
	{
		names = ("r_mean", "r_width", "rel_prob");
		components = (2, 2, 1);
		ranges = ();
	},
	{
		names = ("xi_mean", "xi_width", "rel_prob");
		components = (1, 1, 1);
		ranges = ();
	}, 
	{
		names = ("xi_mean", "xi_width", "rel_prob");
		components = (2, 2, 1);
		ranges = ();
	}, 
	{
		names = ("alpha_mean", "alpha_width", "rel_prob");
		components = (1, 1, 1);
		ranges = ();
	}, 
	{
		names = ("alpha_mean", "alpha_width", "rel_prob");
		components = (2, 2, 1);
		ranges = ();
	}, 
	{
		names = ("beta_mean", "beta_width", "rel_prob");
		components = (1, 1, 1);
		ranges = ();
	}, 
	{
		names = ("beta_mean", "beta_width", "rel_prob");
		components = (2, 2, 1);
		ranges = ();
	}
);

error_analysis_settings:
{
    confidence_interval = 2;
	samples_per_parameter = 50;
	samples_numerical_error = 10000;
    filepath_fitting_parameters = "";
};


# Calculation
#------------------------------------------------------------------------------------
calculation_settings:
{
	integration_method = "monte_carlo"
	number_of_montecarlo_samples = 1000000;
	distribution_types : {
		r = "normal", 
		xi = "vonmises", 
		phi = "vonmises", 
		alpha = "vonmises", 
		beta = "vonmises", 
		gamma = "vonmises", 
		j = "normal"
	};
	excitation_threshold = 1e-9;
	euler_angles_convention = "ZXZ";
};


# Output
#------------------------------------------------------------------------------------  
output:
{
    directory = "";
    save_data = 1;
    save_figures = 1;
};

### eof